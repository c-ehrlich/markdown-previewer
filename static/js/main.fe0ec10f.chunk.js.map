{"version":3,"sources":["store.js","components/Header.jsx","components/Input.jsx","components/Output.jsx","components/MoreInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStore","create","set","text","setText","state","dark","setDark","ButtonAppBar","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","icon","faMarkdown","IconButton","onClick","style","color","blueGrey","yellow","Switch","checked","onChange","name","Input","props","Grid","item","xs","md","Card","height","CardHeader","title","action","Tooltip","arrow","Divider","CardContent","TextField","value","e","target","id","rows","fullWidth","multiline","label","inputProps","fontFamily","Transition","React","forwardRef","ref","Slide","direction","SwipeInDialogTitle","children","onClose","other","DialogTitle","m","p","right","top","Output","useState","formatted","setFormatted","marked","setOptions","renderer","Renderer","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","useEffect","parse","createMarkup","__html","modalOpen","setModalOpen","handleCloseModal","minHeight","overflowY","maxHeight","overflow","Box","dangerouslySetInnerHTML","maxWidth","Dialog","open","TransitionComponent","keepMounted","DialogContent","ExpandMore","styled","expand","theme","transform","marginLeft","transition","transitions","duration","shortest","MoreInfo","expanded","setExpanded","setTimeout","window","scrollTo","document","body","scrollHeight","behavior","Collapse","in","timeout","unmountOnExit","gutterBottom","App","createTheme","palette","mode","ThemeProvider","flexDirection","className","bgcolor","flex","container","spacing","dirction","justifyContent","alignItems","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe0ec10f.chunk.js","sourcesContent":["import create from \"zustand\";\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHere's some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nconst useStore = create((set) => ({\n  text: placeholder,\n  setText: (text) => set((state) => ({...state, text})),\n  dark: false,\n  setDark: (dark) => set((state) => ({...state, dark})),\n}));\n\nexport default useStore;\n","import * as React from \"react\";\n\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Switch,\n} from \"@mui/material\";\n\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nimport Brightness2Icon from \"@mui/icons-material/Brightness2\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMarkdown } from \"@fortawesome/free-brands-svg-icons\";\n\nimport useStore from \"../store\";\n\nexport default function ButtonAppBar() {\n  const dark = useStore((state) => state.dark);\n  const setDark = useStore((state) => state.setDark);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          <FontAwesomeIcon icon={faMarkdown} /> Markdown Previewer\n        </Typography>\n        <IconButton area-label=\"light-mode\" onClick={() => setDark(false)}>\n          <WbSunnyIcon style={{ color: dark ? blueGrey[500] : yellow[200] }} />\n        </IconButton>\n\n        <Switch checked={dark} onChange={() => setDark(!dark)} name=\"gilad\" />\n        <IconButton area-label=\"dark-mode\" onClick={() => setDark(true)}>\n          <Brightness2Icon />\n        </IconButton>\n        {/* </Stack> */}\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import useStore from \"../store\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\n\nconst Input = (props) => {\n  const text = useStore((state) => state.text);\n  const setText = useStore((state) => state.setText);\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card variant=\"outlined\" height=\"100%\">\n        <CardHeader\n          title=\"Editor\"\n          action={\n            <Tooltip title=\"Clear Text\" arrow>\n              <IconButton area-label=\"clear text\" onClick={() => setText(\"\")}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        />\n        <Divider />\n        <CardContent height={300}>\n          <TextField\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            id=\"editor\"\n            rows={12}\n            fullWidth\n            multiline\n            height=\"100%\"\n            label=\"Markdown\"\n            variant=\"filled\"\n            inputProps={{style: {fontFamily: \"Monospace\"}}}\n          />\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from \"react\";\nimport useStore from \"../store\";\nimport { marked } from \"marked\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton,\n  Slide,\n  Tooltip,\n} from \"@mui/material\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst SwipeInDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nconst Output = () => {\n  const text = useStore((state) => state.text);\n  const [formatted, setFormatted] = useState(\"\");\n\n  marked.setOptions({\n    renderer: new marked.Renderer(),\n    pedantic: false,\n    gfm: true,\n    breaks: true,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n  });\n\n  useEffect(() => {\n    setFormatted(marked.parse(text));\n  }, [text]);\n\n  const createMarkup = () => {\n    return { __html: formatted };\n  };\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Grid item xs={12} md={6} sx={{ minHeight: \"100%\", overflowY: \"scroll\" }}>\n      <Card\n        variant=\"outlined\"\n        sx={{\n          minHeight: \"calc(100% - 2px)\",\n          maxHeight: \"calc(100% - 2px)\",\n          overflow: \"scroll\",\n        }}\n      >\n        <CardHeader\n          title=\"Preview\"\n          action={\n            <Tooltip title=\"Fullscreen\" arrow>\n              <IconButton area-label=\"maximize\" onClick={handleOpenModal}>\n                <FullscreenIcon />\n              </IconButton>\n            </Tooltip>\n          }\n        />\n        <Divider />\n        <CardContent sx={{ maxHeight: \"300px\", overflow: \"scroll\" }}>\n          <Box\n            id=\"preview\"\n            dangerouslySetInnerHTML={createMarkup()}\n            sx={{ maxWidth: \"100%\", overflow: \"scroll\" }}\n          />\n        </CardContent>\n      </Card>\n      <Dialog\n        open={modalOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleCloseModal}\n        maxWidth=\"md\"\n        fullWidth={true}\n      >\n        <SwipeInDialogTitle\n          id=\"markdown-modal-title\"\n          onClose={handleCloseModal}\n        >\n          Fullscreen Preview\n        </SwipeInDialogTitle>\n        <Divider />\n        <DialogContent>\n          <div dangerouslySetInnerHTML={createMarkup()} />\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default Output;\n","import { useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nconst MoreInfo = () => {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    setTimeout(() => {\n      window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n    }, 500);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\">\n        <CardHeader\n          title=\"What is Markdown?\"\n          action={\n            <ExpandMore\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </ExpandMore>\n          }\n        />\n        <Divider />\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography gutterBottom>\n              Markdown is a lightweight markup language for creating formatted\n              text using a plain-text editor. John Gruber and Aaron Swartz (RIP)\n              created Markdown in 2004 as a markup language that is appealing to\n              human readers in its source code form. Markdown is widely used in\n              blogging, instant messaging, online forums, collaborative\n              software, documentation pages, and readme files. The initial\n              description of Markdown contained ambiguities and raised\n              unanswered questions. To correct these problems, later\n              implementations introduced subtle differences from the original\n              version as well as syntax extensions.\n            </Typography>\n            <Typography>\n              GitHub had been using its own variant of Markdown since as early\n              as 2009, adding support for additional formatting such as tables\n              and nesting block content inside list elements, as well as\n              GitHub-specific features such as auto-linking references to\n              commits, issues, usernames, etc. In 2017, GitHub released a formal\n              specification of their GitHub Flavored Markdown (GFM) that is\n              based on CommonMark. It is a strict superset of CommonMark,\n              following its specification exactly except for tables,\n              strikethrough, autolinks and task lists, which GFM adds as\n              extensions. GitHub also changed the parser used on their sites\n              accordingly, which required that some documents be changed. For\n              instance, GFM now requires that the hash symbol that creates a\n              heading be separated from the heading text by a space character.\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default MoreInfo;\n","import \"./App.css\";\n\nimport useStore from \"./store\";\n\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport Output from \"./components/Output\";\n\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Box, Grid } from \"@mui/material\";\nimport MoreInfo from \"./components/MoreInfo\";\n\nfunction App() {\n  const dark = useStore((state) => state.dark);\n\n  const theme = createTheme({\n    palette: {\n      mode: dark ? \"dark\" : \"light\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box flexDirection=\"column\" className=\"App\" sx={{ minHeight: \"100vh\", bgcolor: dark ? \"#000\" : \"#f8fcff\" }}>\n        <Box flex={1}>\n          <Header />\n          <Grid\n            container\n            p={2}\n            spacing={2}\n            dirction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{ marginTop: 1 }}\n          >\n            <Input />\n            <Output />\n            <MoreInfo />\n          </Grid>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}